{
  "version": 3,
  "sources": ["../src/can-interface-socketcan.ts"],
  "sourcesContent": ["/*\n * CAN interface for socketcan (Linux native CAN support)\n */\nimport { boundMethod } from 'autobind-decorator';\nimport * as socketcan from 'socketcan';\nimport type { CanBusAdapter } from './main';\nimport { CanInterface } from './can-interface';\n\n/**\n * Interface to the CAN bus using socketcan.\n */\nexport class CanInterfaceSocketcan extends CanInterface {\n  private channel: socketcan.RawChannel | null = null;\n\n  constructor (adapter: CanBusAdapter) {\n    super(adapter);\n\n  }\n\n  // eslint-disable-next-line @typescript-eslint/require-await\n  public async start (): Promise<boolean> {\n    try {\n      this.channel = socketcan.createRawChannel(this.adapter.config.interface, false);\n      this.channel.addListener('onMessage', this.handleCanMsg);\n      this.channel.addListener('onStopped', this.handleStopped);\n      this.channel.start();\n    } catch (err) {\n      this.adapter.log.error(`Error starting can interface: ${err}`);\n      return false;\n    }\n\n    this.started = true;\n    this.emit('started');\n    return true;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/require-await\n  public async stop (): Promise<void> {\n    if (this.channel) {\n      this.channel.stop();\n      this.started = false;\n    }\n  }\n\n  public isReady (): boolean {\n    return this.started && this.channel !== null;\n  }\n\n  public send (id: number, ext: boolean, data: Buffer, rtr: boolean = false): boolean {\n    if (!this.channel) {\n      this.adapter.log.warn(`Could not send data because channel is not initialized.`);\n      return false;\n    }\n\n    // ID validation\n    if (ext) {\n      if (id < 0 || id > 0x1FFFFFFF) {\n        this.adapter.log.error(`Extended CAN ID out of range: 0x${id.toString(16)}`);\n        return false;\n      }\n    } else {\n      if (id < 0 || id > 0x7FF) {\n        this.adapter.log.error(`Standard CAN ID out of range: 0x${id.toString(16)}`);\n        return false;\n      }\n    }\n\n    // Data length / DLC\n    let dlc = data.length;\n    if (dlc > 8) {\n      this.adapter.log.warn(`Truncating data from ${dlc} to 8 bytes`);\n      dlc = 8;\n    }\n    if (dlc < 0) dlc = 0; // defensive\n\n    const msg: socketcan.CanMessage = {\n      id,\n      ext,\n      rtr,\n      data: data.subarray(0, dlc),\n    };\n    this.adapter.log.debug(`sending can message: ${JSON.stringify(msg)}`);\n\n    this.channel.send(msg);\n\n    return true;\n  }\n\n  @boundMethod\n  private handleCanMsg (msg: socketcan.CanMessage): void {\n    this.adapter.log.debug(`Received can message: ${JSON.stringify(msg)}`);\n\n    this.emit('message', msg);\n  }\n\n  @boundMethod\n  private handleStopped (): void {\n    this.started = false;\n    this.emit('stopped');\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA,gCAA4B;AAC5B,gBAA2B;AAE3B,2BAA6B;AAKtB,MAAM,8BAA8B,kCAAa;AAAA,EAGtD,YAAa,SAAwB;AACnC,UAAM,OAAO;AAHf,SAAQ,UAAuC;AAAA,EAK/C;AAAA;AAAA,EAGA,MAAa,QAA2B;AACtC,QAAI;AACF,WAAK,UAAU,UAAU,iBAAiB,KAAK,QAAQ,OAAO,WAAW,KAAK;AAC9E,WAAK,QAAQ,YAAY,aAAa,KAAK,YAAY;AACvD,WAAK,QAAQ,YAAY,aAAa,KAAK,aAAa;AACxD,WAAK,QAAQ,MAAM;AAAA,IACrB,SAAS,KAAK;AACZ,WAAK,QAAQ,IAAI,MAAM,iCAAiC,GAAG,EAAE;AAC7D,aAAO;AAAA,IACT;AAEA,SAAK,UAAU;AACf,SAAK,KAAK,SAAS;AACnB,WAAO;AAAA,EACT;AAAA;AAAA,EAGA,MAAa,OAAuB;AAClC,QAAI,KAAK,SAAS;AAChB,WAAK,QAAQ,KAAK;AAClB,WAAK,UAAU;AAAA,IACjB;AAAA,EACF;AAAA,EAEO,UAAoB;AACzB,WAAO,KAAK,WAAW,KAAK,YAAY;AAAA,EAC1C;AAAA,EAEO,KAAM,IAAY,KAAc,MAAc,MAAe,OAAgB;AAClF,QAAI,CAAC,KAAK,SAAS;AACjB,WAAK,QAAQ,IAAI,KAAK,yDAAyD;AAC/E,aAAO;AAAA,IACT;AAGA,QAAI,KAAK;AACP,UAAI,KAAK,KAAK,KAAK,WAAY;AAC7B,aAAK,QAAQ,IAAI,MAAM,mCAAmC,GAAG,SAAS,EAAE,CAAC,EAAE;AAC3E,eAAO;AAAA,MACT;AAAA,IACF,OAAO;AACL,UAAI,KAAK,KAAK,KAAK,MAAO;AACxB,aAAK,QAAQ,IAAI,MAAM,mCAAmC,GAAG,SAAS,EAAE,CAAC,EAAE;AAC3E,eAAO;AAAA,MACT;AAAA,IACF;AAGA,QAAI,MAAM,KAAK;AACf,QAAI,MAAM,GAAG;AACX,WAAK,QAAQ,IAAI,KAAK,wBAAwB,GAAG,aAAa;AAC9D,YAAM;AAAA,IACR;AACA,QAAI,MAAM,EAAG,OAAM;AAEnB,UAAM,MAA4B;AAAA,MAChC;AAAA,MACA;AAAA,MACA;AAAA,MACA,MAAM,KAAK,SAAS,GAAG,GAAG;AAAA,IAC5B;AACA,SAAK,QAAQ,IAAI,MAAM,wBAAwB,KAAK,UAAU,GAAG,CAAC,EAAE;AAEpE,SAAK,QAAQ,KAAK,GAAG;AAErB,WAAO;AAAA,EACT;AAAA,EAGQ,aAAc,KAAiC;AACrD,SAAK,QAAQ,IAAI,MAAM,yBAAyB,KAAK,UAAU,GAAG,CAAC,EAAE;AAErE,SAAK,KAAK,WAAW,GAAG;AAAA,EAC1B;AAAA,EAGQ,gBAAuB;AAC7B,SAAK,UAAU;AACf,SAAK,KAAK,SAAS;AAAA,EACrB;AACF;AAXU;AAAA,EADP;AAAA,GA7EU,sBA8EH;AAOA;AAAA,EADP;AAAA,GApFU,sBAqFH;",
  "names": []
}
